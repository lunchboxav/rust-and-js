{"config":{"output_file":null,"full_docs":false,"pub_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_name":"itoa","crate_root":"C:\\Users\\USER\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itoa-0.3.4\\src","external_crates":[{"name":"unwind","num":8,"file_name":"C:\\Users\\USER\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itoa-0.3.4\\src\\lib.rs"},{"name":"std_unicode","num":5,"file_name":"C:\\Users\\USER\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itoa-0.3.4\\src\\lib.rs"},{"name":"core","num":2,"file_name":"C:\\Users\\USER\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itoa-0.3.4\\src\\lib.rs"},{"name":"panic_unwind","num":10,"file_name":"C:\\Users\\USER\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itoa-0.3.4\\src\\lib.rs"},{"name":"libc","num":7,"file_name":"C:\\Users\\USER\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itoa-0.3.4\\src\\lib.rs"},{"name":"alloc","num":4,"file_name":"C:\\Users\\USER\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itoa-0.3.4\\src\\lib.rs"},{"name":"std","num":1,"file_name":"C:\\Users\\USER\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itoa-0.3.4\\src\\lib.rs"},{"name":"compiler_builtins","num":9,"file_name":"C:\\Users\\USER\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itoa-0.3.4\\src\\lib.rs"},{"name":"alloc_system","num":6,"file_name":"C:\\Users\\USER\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itoa-0.3.4\\src\\lib.rs"},{"name":"rand","num":3,"file_name":"C:\\Users\\USER\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itoa-0.3.4\\src\\lib.rs"}],"span":{"file_name":[67,58,92,85,115,101,114,115,92,85,83,69,82,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,111,97,45,48,46,51,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":338,"byte_end":7472,"line_start":9,"line_end":196,"column_start":1,"column_end":30}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[67,58,92,85,115,101,114,115,92,85,83,69,82,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,111,97,45,48,46,51,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":338,"byte_end":7472,"line_start":9,"line_end":196,"column_start":1,"column_end":30},"name":"","qualname":"::","value":"C:\\Users\\USER\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\itoa-0.3.4\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":11},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":8},"span":{"file_name":[67,58,92,85,115,101,114,115,92,85,83,69,82,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,111,97,45,48,46,51,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":622,"byte_end":627,"line_start":21,"line_end":21,"column_start":8,"column_end":13},"name":"write","qualname":"::write","value":"fn <W, V> (wr: W, value: V) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[67,58,92,85,115,101,114,115,92,85,83,69,82,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,111,97,45,48,46,51,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":605,"byte_end":614,"line_start":20,"line_end":20,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":9},"span":{"file_name":[67,58,92,85,115,101,114,115,92,85,83,69,82,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,111,97,45,48,46,51,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":727,"byte_end":734,"line_start":25,"line_end":25,"column_start":11,"column_end":18},"name":"Integer","qualname":"::Integer","value":"Integer","parent":null,"children":[{"krate":0,"index":10}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":[67,58,92,85,115,101,114,115,92,85,83,69,82,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,111,97,45,48,46,51,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":744,"byte_end":749,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"write","qualname":"::Integer::write","value":"fn <W> (self, W) -> io::Result<usize>","parent":{"krate":0,"index":9},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":[67,58,92,85,115,101,114,115,92,85,83,69,82,92,46,99,97,114,103,111,92,114,101,103,105,115,116,114,121,92,115,114,99,92,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,92,105,116,111,97,45,48,46,51,46,52,92,115,114,99,92,108,105,98,46,114,115],"byte_start":828,"byte_end":836,"line_start":30,"line_end":30,"column_start":8,"column_end":16},"name":"write_to","qualname":"::IntegerPrivate::write_to","value":"fn (self, buf: &mut [u8; MAX_LEN]) -> &[u8]","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}